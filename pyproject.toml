[tool.poetry]
name = "value-seeker"
version = "1.0.0"
description = "AI投资分析师 - 模拟段永平投资思维的智能研究助理"
authors = ["Value-Seeker Team <team@value-seeker.ai>"]
readme = "README.md"
packages = [{include = "src"}]

[tool.poetry.dependencies]
python = "^3.9"
torch = "^2.0.0"
transformers = "^4.35.0"
accelerate = "^0.24.0"
peft = "^0.6.0"
trl = "^0.7.0"
bitsandbytes = "^0.41.0"
unstructured = "^0.10.0"
langchain = "^0.0.300"
langchain-community = "^0.0.20"
pypdf = "^3.17.0"
pandas = "^2.0.0"
faiss-cpu = "^1.7.4"
sentence-transformers = "^2.2.0"
gradio = "^4.0.0"
pyyaml = "^6.0"
python-dotenv = "^1.0.0"
click = "^8.1.0"
ragas = "^0.1.0"
wandb = "^0.16.0"
uvicorn = "^0.23.0"
fastapi = "^0.104.0"
gunicorn = "^21.2.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
pytest-asyncio = "^0.21.0"
black = "^23.0.0"
flake8 = "^6.0.0"
mypy = "^1.5.0"
isort = "^5.12.0"
pre-commit = "^3.4.0"

[tool.poetry.scripts]
value-seeker = "main:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --cov=src --cov-report=term-missing --cov-report=html"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]